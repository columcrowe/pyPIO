# PYTHON_ENV_DIR: (optional) where uv should create the virtual environment - set to .venv for default
export PYTHON_ENV_DIR=
# PLATFORMIO_PYTHON_EXE: which venv platformio should use - set to .venv/Scripts/python.exe for default
export PLATFORMIO_PYTHON_EXE=
# PLATFORMIO_HOME_DIR: (optional) where platformio should install to - set for local install
export PLATFORMIO_HOME_DIR=
# UV_PYTHON_INSTALL_DIR: (optional) where uv should install to - set for local install
export UV_PYTHON_INSTALL_DIR=
# PYTHONIOENCODING: (optional) set encoding to utf-8
export PYTHONIOENCODING=
# USE_DIR_ENV: true*|false - whether or not to use direnv to auto-create & load venv
export USE_DIR_ENV=
# USE_UV: true*|false - whether or not to use UV as python package and project manager
export USE_UV=

source_env .envrc.private
source_env .config/direnvrc

ensure_all_documented
ensure_all_set

if [ "$USE_DIR_ENV" = "true" ]; then # Use direnv to load the venv
	if [ "$USE_UV" = "true" ]; then # Use uv to manage the venv
	  layout_uv() {
		if [ ! -d "$PYTHON_ENV_DIR" ]; then
		  uv venv "$PYTHON_ENV_DIR"
		fi
	  }
	  layout_uv
	fi
    
	VIRTUAL_ENV=$PYTHON_ENV_DIR
	if [ -x "$VIRTUAL_ENV/bin/python" ]; then
	  # Linux venv layout
	  PATH_add "$VIRTUAL_ENV/bin"
	  source "$VIRTUAL_ENV/bin/activate"
	elif [ -x "$VIRTUAL_ENV/Scripts/python.exe" ]; then
	  # Windows venv layout
	  PATH_add "$VIRTUAL_ENV/Scripts"
	  source "$VIRTUAL_ENV/Scripts/activate"
	fi
	
fi


