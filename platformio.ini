; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
; https://registry.platformio.org/
[env:uno_r4_wifi]
platform = renesas-ra
board = uno_r4_wifi
framework = arduino
build_src_filter =
    +<uno_r4_wifi/*.*>
    -<*.*>
build_flags =
upload_protocol = sam-ba
;upload_port = 
lib_deps =
;    adafruit/Adafruit NeoPixel @ ^1.10.7
    FastLED/FastLED
    WiFiS3
;    https://github.com/FastLED/FastLED#95d0a5582b2052729f345719e65edf7a4b9e7098
;    https://github.com/adafruit/Adafruit_NeoPixel#v1.15.1
;    https://github.com/arduino-libraries/WiFi

[env:arduino_nano]
platform = atmelavr
board = nanoatmega328new
framework = arduino
build_src_filter =
    +<arduino_nano/*.*>
    -<*.*>
build_flags =
;upload_port = 
lib_deps = FastLED/FastLED

[env:stm32f4_disc]
platform = ststm32
board = disco_f407vg
framework = stm32cube ;cmsis or stm32cube
build_src_filter =
    +<stm32f4_disc/*.*>
    -<*.*>
;build_flags =
upload_protocol = stlink

[env:feather_esp32]
platform = espressif32
board = featheresp32
framework = arduino, espidf
monitor_speed = 115200
build_src_filter =
    +<feather_esp32/*.*>
    -<*.*>
;build_flags =
    -D CONFIG_BLINK_GPIO=2
upload_protocol = esptool
	
[env:feather_huzzah]
platform = espressif8266
board = huzzah
framework = arduino ;arduino or esp8266-rtos-sdk
monitor_speed = 9600
build_src_filter =
    +<feather_huzzah/*.*>
    -<*.*>
;build_flags =
upload_protocol = esptool
upload_speed = 115200
lib_deps = ESPAsyncUDP
	
[env:pycom_lopy]
;micropython not supported by plaftormio
;just using mpremote or thonny to manage filesystem
platform = espressif32
board = lopy
framework = micropython ;ignored (using custom)
build_src_filter =
    +<pycom_lopy/*.*>
    -<*.*>
extra_scripts = pre:pycom_lopy_mpremote.py ;overwriting the platformio flow
;lib_deps = 

[env:mpfs_icicle_kit]
;not supported by platformio
;workflow is a but hacky atm:
; makes use of softconsole toolchain
; assumes HSS (FSBL for polarfire SOC) on eNVM, transfers binary file by YMODEM, flashes payload to the eMMC
; ZSBL on Boot ROM -> FSBL stored on eNVM ROM -> runs on LIM SRAM -> payload
; org.eclipse.cdt.managedbuilder.core.headlessbuild -> makefile (riscv-unknown-elf-gcc) -> hss-payload-generator -> YMODEM
platform = sifive ;ignored (using custom)
board = hifive-unleashed ;ignored (using custom)
framework = polarfire ;ignored (using custom)
build_src_filter =
    +<mpfs_icicle_kit/*.*>
    -<*.*>
upload_protocol = openocd ;ignored (using custom)
upload_speed = 115200
extra_scripts = 
		pre:mpfs_icicle_kit_eclipse.py
		pre:mpfs_icicle_kit_ymodem.py ;overwriting the platformio flow
